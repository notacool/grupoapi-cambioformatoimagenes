name: Release - Build y Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout código
      uses: actions/checkout@v5

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ejecutar tests
      run: |
        python test_converter.py

    - name: Crear archivo de versión
      run: |
        echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
        echo "VERSION_NUMBER=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

    - name: Crear package
      run: |
        mkdir -p dist
        tar -czf dist/tiff-converter-${{ env.VERSION_NUMBER }}.tar.gz \
          --exclude='.git' \
          --exclude='test_*' \
          --exclude='examples' \
          --exclude='.github' \
          --exclude='*.pyc' \
          --exclude='__pycache__' \
          .

    - name: Crear requirements-lock.txt
      run: |
        pip freeze > requirements-lock.txt

    - name: Subir artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: |
          dist/
          requirements-lock.txt

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout código
      uses: actions/checkout@v5

    - name: Crear Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## 🚀 Nuevo Release: ${{ github.ref_name }}
          
          ### 📋 Cambios en esta versión:
          - Mejoras en conversores
          - Correcciones de bugs
          - Actualizaciones de dependencias
          
          ### 📦 Instalación:
          ```bash
          pip install -r requirements.txt
          ```
          
          ### 🧪 Tests:
          ```bash
          python test_converter.py
          ```
          
          ### 📚 Documentación:
          - README.md actualizado
          - Guía del desarrollador incluida
          - Ejemplos de uso disponibles
          
          ### 🔧 Uso:
          ```bash
          python main.py --input "imagenes/" --output "convertidas/"
          ```
          
          ### 📁 Archivos incluidos:
          - Conversor TIFF a JPG (400 DPI y 200 DPI)
          - Conversor TIFF a PDF con EasyOCR
          - Sistema de configuración modular
          - Tests completos
          - Documentación completa
          
          ### 🎯 Formatos soportados:
          - JPG 400 DPI (alta resolución)
          - JPG 200 DPI (resolución media)
          - PDF con OCR (texto buscable)
          
          ### 🐛 Reportar bugs:
          Por favor, crea un issue en GitHub si encuentras algún problema.
          
          ### 🤝 Contribuir:
          Las contribuciones son bienvenidas. Revisa DEVELOPER_GUIDE.md para más información.
        draft: false
        prerelease: false

    - name: Subir Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/tiff-converter-${{ env.VERSION_NUMBER }}.tar.gz
        asset_name: tiff-converter-${{ env.VERSION_NUMBER }}.tar.gz
        asset_content_type: application/gzip

  notify:
    needs: create-release
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notificar éxito
      if: success()
      run: |
        echo "✅ Release ${{ github.ref_name }} creado exitosamente"
        echo "📦 Package disponible en: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
        
    - name: Notificar fallo
      if: failure()
      run: |
        echo "❌ Fallo al crear release ${{ github.ref_name }}"
        echo "🔍 Revisar logs para más detalles"
